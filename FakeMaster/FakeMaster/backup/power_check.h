//*****************************************************************************
//*****************************************************************************
//  FILENAME: POWER_CHECK.h
//  Version: 1.1, Updated on 2009/7/10 at 10:41:37
//	Generated by PSoC Designer 5.0.985.0
//
//  DESCRIPTION:  C declarations for the ADCINC User Module with
//                a 1st-order modulator.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress MicroSystems YYYY. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall16 POWER_CHECK_Start
#pragma fastcall16 POWER_CHECK_SetPower
#pragma fastcall16 POWER_CHECK_Stop
#pragma fastcall16 POWER_CHECK_GetSamples
#pragma fastcall16 POWER_CHECK_StopADC
#pragma fastcall16 POWER_CHECK_fIsDataAvailable
#pragma fastcall16 POWER_CHECK_iClearFlagGetData
#pragma fastcall16 POWER_CHECK_wClearFlagGetData
#pragma fastcall16 POWER_CHECK_cClearFlagGetData
#pragma fastcall16 POWER_CHECK_bClearFlagGetData
#pragma fastcall16 POWER_CHECK_iGetData
#pragma fastcall16 POWER_CHECK_wGetData
#pragma fastcall16 POWER_CHECK_cGetData
#pragma fastcall16 POWER_CHECK_bGetData
#pragma fastcall16 POWER_CHECK_fClearFlag
#pragma fastcall16 POWER_CHECK_WritePulseWidth

//-------------------------------------------------
// Prototypes of the POWER_CHECK API.
//-------------------------------------------------
extern void  POWER_CHECK_Start(BYTE bPower);
extern void  POWER_CHECK_SetPower(BYTE bPower);
extern void  POWER_CHECK_Stop(void);
extern void  POWER_CHECK_GetSamples(BYTE bNumSamples);
extern void  POWER_CHECK_StopADC(void);
extern BYTE  POWER_CHECK_fIsDataAvailable(void);
extern INT   POWER_CHECK_iClearFlagGetData(void);
extern WORD  POWER_CHECK_wClearFlagGetData(void);
extern CHAR  POWER_CHECK_cClearFlagGetData(void);
extern BYTE  POWER_CHECK_bClearFlagGetData(void);
extern INT   POWER_CHECK_iGetData(void);
extern WORD  POWER_CHECK_wGetData(void);
extern CHAR  POWER_CHECK_cGetData(void);
extern BYTE  POWER_CHECK_bGetData(void);
extern BYTE  POWER_CHECK_fClearFlag(void);
extern void  POWER_CHECK_WritePulseWidth(BYTE bPulseWidthValue);


//-------------------------------------------------
// Defines for POWER_CHECK API's.
//-------------------------------------------------
#define POWER_CHECK_OFF         0
#define POWER_CHECK_LOWPOWER    1
#define POWER_CHECK_MEDPOWER    2
#define POWER_CHECK_HIGHPOWER   3


//-------------------------------------------------
// Hardware Register Definitions
//-------------------------------------------------
#pragma ioport  POWER_CHECK_PWMdr0: 0x020                 //Period reg
BYTE            POWER_CHECK_PWMdr0;
#pragma ioport  POWER_CHECK_PWMdr1: 0x021                 //1_ADDRh   ; Down count reg
BYTE            POWER_CHECK_PWMdr1;               
#pragma ioport  POWER_CHECK_PWMdr2: 0x022                 //Compare reg
BYTE            POWER_CHECK_PWMdr2;
#pragma ioport  POWER_CHECK_PWMcr0: 0x023                 //Control reg
BYTE            POWER_CHECK_PWMcr0;
#pragma ioport  POWER_CHECK_PWMfn:  0x120                  //Function reg
BYTE            POWER_CHECK_PWMfn;
#pragma ioport  POWER_CHECK_PWMsl:  0x121                  //Input select reg
BYTE            POWER_CHECK_PWMsl;
#pragma ioport  POWER_CHECK_PWMos:  0x122                  //Output select reg
BYTE            POWER_CHECK_PWMos;
#pragma ioport  POWER_CHECK_AtoDcr0:    0x084                //SC Block Control Reg 0
BYTE            POWER_CHECK_AtoDcr0;
#pragma ioport  POWER_CHECK_AtoDcr1:    0x085                //SC Block Control Reg 1
BYTE            POWER_CHECK_AtoDcr1;
#pragma ioport  POWER_CHECK_AtoDcr2:    0x086                //SC Block Control Reg 2
BYTE            POWER_CHECK_AtoDcr2;
#pragma ioport  POWER_CHECK_AtoDcr3:    0x087                //SC Block Control Reg 3
BYTE            POWER_CHECK_AtoDcr3;

// end of file POWER_CHECK.h
