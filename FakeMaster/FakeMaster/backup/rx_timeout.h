//*****************************************************************************
//*****************************************************************************
//  FILENAME: RX_TIMEOUT.h
//   Version: 2.6, Updated on 2009/7/10 at 10:46:42
//  Generated by PSoC Designer 5.0.985.0
//
//  DESCRIPTION: Timer8 User Module C Language interface file
//               for the 22/24/27/29xxx PSoC family of devices
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress MicroSystems 2000-2004. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall16 RX_TIMEOUT_EnableInt                 //                 Proxy 1
#pragma fastcall16 RX_TIMEOUT_DisableInt                //                 Proxy 1
#pragma fastcall16 RX_TIMEOUT_Start                     //                 Proxy 1
#pragma fastcall16 RX_TIMEOUT_Stop                      //                 Proxy 1
#pragma fastcall16 RX_TIMEOUT_bReadTimer                // Read  DR0       Proxy 1
#pragma fastcall16 RX_TIMEOUT_bReadTimerSaveCV          // Read  DR0       Proxy 2
#pragma fastcall16 RX_TIMEOUT_WritePeriod               // Write DR1       Proxy 1
#pragma fastcall16 RX_TIMEOUT_bReadCompareValue         // Read  DR2       Proxy 1
#pragma fastcall16 RX_TIMEOUT_WriteCompareValue         // Write DR2       Proxy 1

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bRX_TIMEOUT_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 bRX_TIMEOUT_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 bRX_TIMEOUT_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 bRX_TIMEOUT_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 bRX_TIMEOUT_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the RX_TIMEOUT API.
//-------------------------------------------------

extern void RX_TIMEOUT_EnableInt(void);
extern void RX_TIMEOUT_DisableInt(void);
extern void RX_TIMEOUT_Start(void);
extern void RX_TIMEOUT_Stop(void);
extern BYTE RX_TIMEOUT_bReadTimer(void);
extern BYTE RX_TIMEOUT_bReadTimerSaveCV(void);
extern void RX_TIMEOUT_WritePeriod(BYTE bPeriod);
extern BYTE RX_TIMEOUT_bReadCompareValue(void);
extern void RX_TIMEOUT_WriteCompareValue(BYTE bCompareValue);

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bRX_TIMEOUT_ReadCompareValue(void);       // Deprecated
extern BYTE bRX_TIMEOUT_ReadTimerSaveCV(void);        // Deprecated
extern BYTE bRX_TIMEOUT_ReadCounter(void);            // Obsolete
extern BYTE bRX_TIMEOUT_ReadTimer(void);              // Deprecated
extern BYTE bRX_TIMEOUT_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for RX_TIMEOUT API's.
//--------------------------------------------------

#define RX_TIMEOUT_CONTROL_REG_START_BIT       ( 0x01 )
#define RX_TIMEOUT_INT_REG_ADDR                ( 0x0e1 )
#define RX_TIMEOUT_INT_MASK                    ( 0x01 )


//--------------------------------------------------
// Constants for RX_TIMEOUT user defined values
//--------------------------------------------------

#define RX_TIMEOUT_PERIOD                      ( 0xfa )
#define RX_TIMEOUT_COMPARE_VALUE               ( 0x00 )


//-------------------------------------------------
// Register Addresses for RX_TIMEOUT
//-------------------------------------------------

#pragma ioport  RX_TIMEOUT_COUNTER_REG: 0x020              //DR0 Count register
BYTE            RX_TIMEOUT_COUNTER_REG;
#pragma ioport  RX_TIMEOUT_PERIOD_REG:  0x021              //DR1 Period register
BYTE            RX_TIMEOUT_PERIOD_REG;
#pragma ioport  RX_TIMEOUT_COMPARE_REG: 0x022              //DR2 Compare register
BYTE            RX_TIMEOUT_COMPARE_REG;
#pragma ioport  RX_TIMEOUT_CONTROL_REG: 0x023              //Control register
BYTE            RX_TIMEOUT_CONTROL_REG;
#pragma ioport  RX_TIMEOUT_FUNC_REG:    0x120              //Function register
BYTE            RX_TIMEOUT_FUNC_REG;
#pragma ioport  RX_TIMEOUT_INPUT_REG:   0x121              //Input register
BYTE            RX_TIMEOUT_INPUT_REG;
#pragma ioport  RX_TIMEOUT_OUTPUT_REG:  0x122              //Output register
BYTE            RX_TIMEOUT_OUTPUT_REG;
#pragma ioport  RX_TIMEOUT_INT_REG:       0x0e1            //Interrupt Mask Register
BYTE            RX_TIMEOUT_INT_REG;


//-------------------------------------------------
// RX_TIMEOUT Macro 'Functions'
//-------------------------------------------------

#define RX_TIMEOUT_Start_M \
   ( RX_TIMEOUT_CONTROL_REG |=  RX_TIMEOUT_CONTROL_REG_START_BIT )

#define RX_TIMEOUT_Stop_M  \
   ( RX_TIMEOUT_CONTROL_REG &= ~RX_TIMEOUT_CONTROL_REG_START_BIT )

#define RX_TIMEOUT_EnableInt_M   \
   M8C_EnableIntMask(  RX_TIMEOUT_INT_REG, RX_TIMEOUT_INT_MASK )

#define RX_TIMEOUT_DisableInt_M  \
   M8C_DisableIntMask( RX_TIMEOUT_INT_REG, RX_TIMEOUT_INT_MASK )


// end of file RX_TIMEOUT.h
